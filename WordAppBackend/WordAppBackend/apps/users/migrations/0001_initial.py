# Generated by Django 4.2 on 2025-03-08 14:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=50, unique=True, verbose_name='昵称')),
                ('avatar', models.FileField(default='avatars/default_avatar.jpg', upload_to='avatars')),
                ('openid', models.CharField(max_length=100, unique=True, verbose_name='微信openid')),
                ('studied_words', models.IntegerField(default=0)),
                ('learning_time', models.DurationField(default=0)),
                ('today_words', models.IntegerField(default=0, verbose_name='今日学习单词数')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': '用户表',
                'db_table': 't_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DailyRecordModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='记录日期')),
                ('new_words', models.IntegerField(default=0, verbose_name='新学单词')),
                ('review_words', models.IntegerField(default=0, verbose_name='复习单词')),
            ],
            options={
                'verbose_name': '每日学习记录',
                'verbose_name_plural': '每日学习记录',
                'db_table': 't_daily_record',
            },
        ),
        migrations.CreateModel(
            name='ErrorWordModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_count', models.IntegerField(default=1, verbose_name='错误次数')),
                ('last_error_time', models.DateTimeField(auto_now=True, verbose_name='最后错误时间')),
            ],
            options={
                'verbose_name': '错题本',
                'verbose_name_plural': '错题本',
                'db_table': 't_error_word',
            },
        ),
        migrations.CreateModel(
            name='UserWordBandModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('study_words', models.IntegerField(default=0, verbose_name='已学单词')),
                ('total_words', models.IntegerField(default=0, verbose_name='总单词数')),
                ('daily_goal', models.IntegerField(default=20, verbose_name='每日学习目标')),
            ],
            options={
                'verbose_name': '用户词书表',
                'verbose_name_plural': '用户词书表',
                'db_table': 't_user_word_band',
            },
        ),
        migrations.CreateModel(
            name='UserWordRecordModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory_stage', models.IntegerField(choices=[(0, '未开始'), (1, '阶段1'), (2, '阶段2'), (3, '阶段3'), (4, '阶段4'), (5, '已掌握')], default=0)),
                ('next_review', models.DateTimeField(verbose_name='下次复习时间')),
                ('correct_count', models.IntegerField(default=0, verbose_name='正确次数')),
                ('wrong_count', models.IntegerField(default=0, verbose_name='错误次数')),
                ('last_reviewed', models.DateTimeField(auto_now=True, verbose_name='最后复习时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户单词记录',
                'verbose_name_plural': '用户单词记录',
                'db_table': 't_user_word_record',
            },
        ),
    ]
